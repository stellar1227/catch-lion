{"version":3,"sources":["src/Board.ts","src/Game.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","length","module"],"mappings":"AGAA,ACAA,IDAIA,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;AFAA;ACCA,ACCA,SDDSZ,ACCAa,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,MDDI,ACCAC,CDDChB,MCCM,GDDX,ACCce,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEjB,IAAAA,SAAS,GAAGE,YAAY,EAAxB;AACD,ACADc,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BH,IAAAA,IAAI,CAACI,MAAL;ADCF,ACAC,AJCH,ACPA,GGIE,CJGF,ACPA,IDOA,CGDSnB,EFNT,GAAA,IEME,GFNF,CAAA,SAAA,CAAA;AEOC,AHAD;AIAEgB,AJAF,ACJA,EGIEA,EHJF,IAAA,CGIS,CAACI,EJAV,EIAE,GAAeL,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,IAAI,CAACC,GAAL,EAA/C;ADEF,ACDER,AJEE,ACPJ,ACGA,EEEEA,EFFF,EEEM,CAACS,EDCEtB,CDHT,CFII,EEJJ,EFII,CAA4B,CIF9B,CAAgBuB,EFFlB,CCGA,ADHA,GCGwB,AHCpB,EAAuD,GEJ3D,CEEE,AFFF,CEE+BT,AJE3B,EAAoE,KIFtE,EAAsCD,IAAI,CAACW,WAA3C;ADEA,ACDD,AJC+B,ACPhC,SDOgC,GCPhC,KDOgC,GAAA,QAAA;AGC9B,AHDyD,ACAvD,ACHJ,MCIM,CDJN,CAAA,CFG2D,ECAvD,GDAuD,CCAvD,EDAuD,CCAvD,IDAuD,gBEH3D,CAAA;ACKI,ACDJ,AJHY,ACJC,IGOTC,KJHQ,ACJC,CEQH,IAAIxB,ACDA,AHPD,GGOI,AJHL,ACJS,EEQX,CHJa,CGInB,ACDJ,AHPyB,IDIb,CAE4D,CAF1C,CCJL,CAAA,KAAJ,EAAR,CAMT,CAN8B;AES/B,AFRC,ACGJ,GCGE,CAEE,GDLJ,CAAA,GCKWC,GAAP,EAAY,QDLhB,CAAA;ACMI,ACFJ,AJHa,QGKLC,CCFCuB,AJHI,GAAA,GGKE,AHLkB,GGKf,ACFlB,CDEmB,ECFE,EJHoB,CGKjBxB,AHLkB,GGKf,CAACE,KAAV,EAAiBC,EHLF,CAAuB,EGKtC,CAAuB,EHLR,CAApB,CAC2D,CADR,0DGK9C,CAAd;ACDF,AHPW,ACIb,IAAI,EEGEoB,GHPO,CCIT,CAAA,IAAJ,CEGE,EAAgB,IHPL,GAAgB,IAAI,OAAA,CAAA,QAAJ,CAAa,OAAb,CAAhB,CAIT,CAJgD;AEShD,ACDA,AJHI,QGIAtB,CHJK,GAAL,CAAS,EGIb,EAAa,KHJT,CAAmB,GAAnB,CAAuB,MAAvB;AGKF,ACDH,AJHE,ACLQ,SAAA,IESAG,SFTA,CESU,CAACH,CFTK,IAAI,EESF,CAAC,CAAD,CAAR,CAAjB,CFT2B,CAAA,QAAJ,CAAa,OAAb,CAAhB,CAGT,CACI;AEMH;AACF,ACDDsB,AJHE,ACFI,EGKNA,AJHE,IAAA,CAAA,CCFU,IGKF,GAAGE,CJHX,CAAA,GAAA,ECFwB,CDExB,EIGqB,AHLM,CGKL,OJHlB,ACF+B,CAAC,IGKF,AJHlC,EAAiB,OCFU,CAAuB,kBAAvB,CAAvB;AGMJ,AJHI,ACFA,IAAA,IGKAC,CJHK,IIGA,CJHL,EIGQC,CJHK,CCFC,CAAC,GDEf,CADa,CIIG,AJHI,CIGHC,IHLjB,CAA0B,MAA1B,KGKQ,CAA0B,wBAA1B,CAAZ;ADEF,AHJG,ACFG,GDAJ,CCAI,KEMC,GAAP,MFNoB,CAAC,WAAf,CAA2B,KAAK,KAAL,CAAW,GAAtC,EAJJ,CAIgD;AEOnD,ACFG,AHJC,SGII,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,AJFF,EAAA,IAAA,CAAA,GIEMrB,MAAM,AJFZ,CIEaJ,AJFb,QAAA,EIEM,CAAkBsB,AJFxB,KIE6B,CAACG,CAAD,CAAL,CAASb,GJFjC,CIEM,MAAqCR,MAAM,CAACV,YAAP,EAAzC,EAAgE;ADGtE,ACFQY,AJFA,ACFR,QGIQA,CDECN,AFNT,EDEe,ECFf,GDEoB,EIEF,CDElB,ACFmBsB,CDECrB,CHJZ,EGIR,CCFwB,CDEC,ACFAwB,CAAD,CAAN,CAAV;ADGN,ACFK,AJFF,ACjBL,CAAA,EDeI,ACfJ,MEqBS,CAAC,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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["import { Piece } from './Piece';\r\nexport interface Position { //이게 인터페이스인 이유는 행위와 가지고 있는 속성에 대한 정의이기 때문이다. \r\n    row : number;\r\n    col : number;\r\n}\r\n\r\n\r\nexport class Cell { // 셀이 클래스인 이유는 여러개를 생성해야 하기 때문이다.\r\n    private isActive = false; //선택된 셀에 관하여 속성이 있어야한다. \r\n    readonly _el : HTMLElement = document.createElement('DIV'); //셀이 실제로 엘레멘트로서 그려져야 하므로 만들고, 내부에서만 쓸 수 있게 하고, 외부에서  오버라이딩 할 수 없게.\r\n    constructor(public readonly position:Position, private piece : Piece){ // 각 셀은 좌표를 가지고 있어야 한다. 이것도 외부에서 변경할 수 없게? , 또한 셀에는 말도 올라와있어야하긴 한다.\r\n        this._el.classList.add('cell');\r\n    }\r\n    \r\n    put(piece : Piece){ // Q : put에 들어오는 piece는 접근제한자 안써도 될까? A : 하단 answer 참조\r\n        this.piece = piece; // Q : 이것은 말을  밀어넣는 행위 근데 this.piece는 왜 여기서 선언햇을까..  A : 아 컨스트럭터에서 접근제한자와 형 선언을 해버리면 할당이 자동으로 된다는것. 그러면  put은 이미 생성된 this.piece가 있기 때문에 그렇구나. \r\n    }\r\n\r\n    getPiece(){ // 현재 말이 올라가있는지 확인해야 하니까.\r\n        return this.piece;\r\n    }\r\n\r\n    active(){ //셀의 active 처리를 할것인가 말것인가 (상태)\r\n        this.isActive = true;\r\n    }\r\n\r\n    deactive(){\r\n        this.isActive = false;\r\n    }\r\n\r\n    render(){ //cell마다 그릴수 있도록\r\n        if(this.isActive){ //상태에 따라 클래스 붙여주고.\r\n            this._el.classList.add('active');\r\n        }else{\r\n            this._el.classList.remove('active');\r\n        }\r\n\r\n        // 말이 있으면 그려주자. \r\n        this._el.innerHTML = (this.piece) ? this.piece.render() : '';\r\n    }\r\n}\r\n\r\nexport class Board { //보드는 셀들의 집합이니까 셀들이 존재해야해요\r\n    cells : Cell[] = []; //기본적으로 빈 배열을 갖고, cells란 아이는 Cell이라는 클래스로 이루어진 배열일 것이다.\r\n    _el : HTMLElement = document.createElement('DIV');\r\n\r\n    constructor(){\r\n        this._el.className = 'board'; // Q: 여기는 왜 클래스 네임으로 쓴걸까? 애드안하고? 그냥 단순 방식을 여러개 보여주려는거였나.\r\n        \r\n        for(let row = 0; row < 4; row++){\r\n            //단순 DOM row 그리기\r\n            const rowEl = document.createElement('DIV');\r\n            rowEl.className = 'row'; // Q : 여기도 왜 classList.add가 아니지. 여기도 마찬가지?\r\n            this._el.appendChild(rowEl);\r\n            //데이터를 가지고 있는 cell을 DOM으로 그리기\r\n            for(let col = 0; col < 3; col++){\r\n                const cell = new Cell({ row, col }, null); //cell로 인스턴스를 생성한다. row와 col을 담아줌으로서 좌표정보를 전달하고, 새 cell이므로 일단 null을 넣는다(piece 없음)\r\n                this.cells.push(cell); //셀들의 집합에 정보를 넣고.\r\n                rowEl.appendChild(cell._el); //row의 DOM안에 끼워넣는다. 그런데 cell._el을 넣는거니까. cell._el은 밖에서 접근이 가능한가보지?! \r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        this.cells.forEach(v => v.render()); //cell들의 render를 호출해본다. 그래야 그리니까. \r\n    }\r\n}\r\n\r\nexport class DeadZone { //죽은 말들 모아놓는 곳 \r\n    private cells : Cell[] = [];\r\n    readonly deadzoneEl = document\r\n    .getElementById(`${this.type}_deadZone`)\r\n    .querySelector('.card-body');\r\n\r\n    constructor(public type : 'upper' | 'lower'){ //4개 이상 잡아먹을 수 없어\r\n        for(let col = 0; col < 4; col++){\r\n            const cell = new Cell({col, row :0}, null); //여기서의 cell은 데드존의 1칸을 의미한다. piece가 들어있지 않기 때문에  null을 주며, 로우는 1개뿐이라 0을 넣어준다. \r\n            this.cells.push(cell);\r\n            this.deadzoneEl.appendChild(cell._el)\r\n        }\r\n    }\r\n\r\n    put(piece : Piece){ //여기도 셀에 piece를 집어넣어야 한다. 죽은말들을 표시해주려면. \r\n        const emptyCell = this.cells.find(v => v.getPiece() === null); //cells집합에서 getPiece했을 때 null것을 찾아(제일 앞의꺼)\r\n        emptyCell.put(piece); //거기에 죽은 말을 넣어주고,  \r\n        emptyCell.render(); //그리고 셀에 피스를 그려준다. \r\n    }\r\n\r\n    render(){\r\n        this.cells.forEach(v => v.render()); //그리고 셀을 렌더링한다. \r\n    }\r\n}","import { Board, Cell, DeadZone } from './Board';\r\n\r\n\r\nexport class Game { //bundling point 에서 사용하기 위해 내보내기 이 namespace 그대로 나감 네임드 익스포트 (디폴트로 내보낼때는 임포트 하는데에서 직접 지정됨)\r\n    readonly board = new Board(); //선언한 것을 수정할 수 없도록 readonly 키워드 사용 \r\n    //Typescript는 readonly 키워드를 사용할 수 있다. readonly가 선언된 클래스 프로퍼티는 선언 시 또는 생성자 내부에서만 값을 할당할 수 있다. 그 외의 경우에는 값을 할당할 수 없고 오직 읽기만 가능한 상태가 된다. 이를 이용하여 상수의 선언에 사용한다.\r\n    readonly upperDeadZone = new DeadZone('upper'); //deadzone을 구성한다. Q : 근데 왜 컨스트럭터에서 구성하지 않았지? 'ㅅ')? 아 리드온리 쓰려고 그런거였지 참\r\n    readonly lowerDeadZone = new DeadZone('lower');\r\n    \r\n\r\n    constructor(){ //constructor 안에서 보드를 선언하지 않은이유 :  const의 스코프때문에 필드레벨로 사용할 수 없어서. \r\n        //const board = new Board()\r\n        const boardContainer = document.querySelector('.board-container'); \r\n        boardContainer.firstChild.remove();\r\n        boardContainer.appendChild(this.board._el); //board가 들어갈 자리에 el을 넣는다. \r\n    }\r\n\r\n}\r\n","/** entry file 작성요령\r\n *  제일 커다란 객체가 되는 클래스를 하나 만든다. 그리고 인스턴스를 생성한다. \r\n *  필요한 환경 관련 파일을 임포트한다. \r\n */\r\n\r\n\r\nimport { Game } from './Game';\r\nimport 'bootstrap/dist/css/bootstrap';\r\nimport './styles/style';\r\n\r\nnew Game();","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}