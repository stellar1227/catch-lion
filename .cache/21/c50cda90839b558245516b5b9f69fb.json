{"id":"src/Game.ts","dependencies":[{"name":"C:\\workspace\\game\\package.json","includedInParent":true,"mtime":1593766158275},{"name":"./Board","loc":{"line":4,"column":22},"parent":"C:\\workspace\\game\\src\\Game.ts","resolved":"C:\\workspace\\game\\src\\Board.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Game = void 0;\n\nvar Board_1 = require(\"./Board\");\n\nvar Game =\n/** @class */\nfunction () {\n  //Typescript는 readonly 키워드를 사용할 수 있다. readonly가 선언된 클래스 프로퍼티는 선언 시 또는 생성자 내부에서만 값을 할당할 수 있다. 그 외의 경우에는 값을 할당할 수 없고 오직 읽기만 가능한 상태가 된다. 이를 이용하여 상수의 선언에 사용한다.\n  function Game() {\n    this.board = new Board_1.Board(); //선언한 것을 수정할 수 없도록 readonly 키워드 사용 \n    //const board = new Board()\n  }\n\n  return Game;\n}();\n\nexports.Game = Game;"},"sourceMaps":{"js":{"mappings":[{"source":"src/Game.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":4}},{"source":"src/Game.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":11}},{"source":"src/Game.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":14}},{"source":"src/Game.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":21}},{"source":"src/Game.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":22}},{"source":"src/Game.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":31}},{"source":"src/Game.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":32}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":4}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":8}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":12}},{"source":"src/Game.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":13,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":14,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":14,"column":11}},{"source":"src/Game.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":14,"column":15}},{"source":"src/Game.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":14,"column":18}},{"source":"src/Game.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":9}},{"source":"src/Game.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":14}},{"source":"src/Game.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":15,"column":17}},{"source":"src/Game.ts","name":null,"original":{"line":5,"column":25},"generated":{"line":15,"column":21}},{"source":"src/Game.ts","name":null,"original":{"line":5,"column":25},"generated":{"line":15,"column":28}},{"source":"src/Game.ts","name":null,"original":{"line":5,"column":25},"generated":{"line":15,"column":29}},{"source":"src/Game.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":15,"column":34}},{"source":"src/Game.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":36}},{"source":"src/Game.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":15,"column":37}},{"source":"src/Game.ts","name":null,"original":{"line":5,"column":34},"generated":{"line":15,"column":38}},{"source":"src/Game.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":16,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":10,"column":5},"generated":{"line":17,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":19,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":19,"column":9}},{"source":"src/Game.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":19,"column":13}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":20,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":20,"column":1}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":20,"column":3}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":22,"column":0}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":22,"column":7}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":22,"column":8}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":22,"column":12}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":22,"column":15}},{"source":"src/Game.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":22,"column":19}}],"sources":{"src/Game.ts":"import { Board } from './Board';\r\n\r\n\r\nexport class Game { //bundling point 에서 사용하기 위해 내보내기 이 namespace 그대로 나감 네임드 익스포트 (디폴트로 내보낼때는 임포트 하는데에서 직접 지정됨)\r\n    readonly board = new Board(); //선언한 것을 수정할 수 없도록 readonly 키워드 사용 \r\n    //Typescript는 readonly 키워드를 사용할 수 있다. readonly가 선언된 클래스 프로퍼티는 선언 시 또는 생성자 내부에서만 값을 할당할 수 있다. 그 외의 경우에는 값을 할당할 수 없고 오직 읽기만 가능한 상태가 된다. 이를 이용하여 상수의 선언에 사용한다.\r\n\r\n    constructor(){ //constructor 안에서 보드를 선언하지 않은이유 :  const의 스코프때문에 필드레벨로 사용할 수 없어서. \r\n        //const board = new Board()\r\n    }\r\n\r\n}\r\n\r\n"},"lineCount":null}},"error":null,"hash":"c85be09decc4bc6aa7de9fd82cad1946","cacheData":{"env":{}}}